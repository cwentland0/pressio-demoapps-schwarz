include(FindUnixCommands)

set(CMD "python3 ${MESHDRIVER} -n 30 30 --outDir ${OUTDIR}/mesh_mono -s ${STENCILVAL} --bounds -5.0 5.0 -5.0 5.0")
execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
if(RES)
  message(FATAL_ERROR "Monolithic mesh generation failed")
else()
  message("Monolithic mesh generation succeeded!")
endif()

set(CMD "python3 ${DECOMPDRIVER} --meshScript ${MESHDRIVER} -n 30 30 --outDir ${OUTDIR}/mesh_decomp -s ${STENCILVAL} --bounds -5.0 5.0 -5.0 5.0 --numDoms 2 2 --overlap 6")
execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
if(RES)
  message(FATAL_ERROR "Decomposed mesh generation failed")
else()
  message("Decomposed mesh generation succeeded!")
endif()

set(CMD "python3 ./gen_trial_space.py")
execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
if(RES)
  message(FATAL_ERROR "Basis generation failed")
else()
  message("Basis generation succeeded!")
endif()

execute_process(COMMAND ${EXENAME} RESULT_VARIABLE CMD_RESULT)
if(RES)
  message(FATAL_ERROR "run failed")
else()
  message("run succeeded!")
endif()

set(CMD "python3 compare.py")
execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
if(RES)
  message(FATAL_ERROR "comparison failed")
else()
  message("comparison succeeded!")
endif()
